{"remainingRequest":"/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/src/components/UserAuthForm.vue?vue&type=template&id=2d8fa027&","dependencies":[{"path":"/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/src/components/UserAuthForm.vue","mtime":1586197817690},{"path":"/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthewyoung/Documents/Documents/Spring_2020/WEB4350/App/build-a-bot/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}